[build-system]
requires = ["scikit-build-core", "nanobind"]
build-backend = "scikit_build_core.build"

[project]
name = "kima"
version = "6.2.4"
description = "A data analysis framework for exoplanet detection"
authors = [
  {name = "JoÃ£o Faria", email = "joao.faria@unige.ch"}
]

readme = "README.md"
license = {text = "MIT License"}
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python",
    "License :: OSI Approved :: MIT License",
]

dependencies = [
    "typing_extensions",
    "numpy",
    "scipy",
    "matplotlib",
    "corner",
    "loguniform",
    "kumaraswamy",
    "urepr",
    "astropy",
    "jaxlib", 
    "jax",
    "rebound",
    "tinygp",
    "pooch",
]

[project.optional-dependencies]
dev = [
    "nanobind",
    "scikit-build-core[pyproject]",
    "mkdocs",
    "mkdocstrings[python]",
    "mkdocs-autorefs",
    "mkdocs-material",
    "mkdocs-jupyter",
    "mkdocs-git-revision-date-localized-plugin",
]

test = [
    "pytest",
    "pytest-mpl",
    "pytest-benchmark",
]

[project.urls]
Homepage = "http://www.kima.science"
Documentation = "http://www.kima.science/docs/"
Repository = "https://github.com/kima-org/kima"
Issues = "https://github.com/kima-org/kima"


[project.scripts]
kima = "kima.pykima.cli:cli_run"
kima-clean = "kima.pykima.cli:cli_clean"


[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

# The minimum version of CMake to use. If CMake is not present on the system or
# is older than this, it will be downloaded via PyPI if possible. An empty
# string will disable this check.
cmake.minimum-version = "3.17"

# The build type to use when building the project. 
# Valid options are: "Debug", "Release", "RelWithDebInfo", "MinSizeRel"
cmake.build-type = "Release"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# # Run pytest to ensure that the package was correctly built
# test-command = "pytest {project}/tests"
# test-requires = "pytest"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"

